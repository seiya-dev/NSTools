import binascii

class PublicCert:
    def getPublic(ctype = None):
        certlist = {
            'Tinfoil': (
                'AAEABJaf6CiNprndUse9Y2QqSprl8FPsy5NhP9o3mSCHvZGZ2l5nl2GNdwmBM/1b'
                'Bc2CiBOeLpdc0mCAA4eM2vAg9RoOW3aSeAhFVhsxxhgI6KR8NGIiTZT3NumhTlas'
                'v3G38Ru97jjduEbWvY8KtOSUjFQ06vm/JlKbfrg2cdPOYKbXqFDb5oAexSp7ej5a'
                'J7xnW6PFM3fPw3LrzgIGL1nzcAOqI6411IgODktp+YL7G6yAbC91uilYfygV/XeD'
                'mYw1TVKxnj+tn770RMSFeSiNsJeBFq/ILOVNrLntfhv9UJOPIvhe7POk9CauX+sV'
                'ty8CL7NuzOkxTa0TFCm/yWdfWO4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSb290LUNBMDAwMDAwMDMA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAVhTMDAwMDAwMjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0h085nwQadoEnV5TEOdrkH4Y7sgLM3xH'
                'I+M5Vz9MZkkH2y8IMtA99epfFgpK8kEA1xr6wuOuda+hIoASqaIWFll99x6vy2WU'
                'FHDRtA9e+DpZfhefy1tXwu4X2jvDdphky0eFZ2cinWcygUH8mrHfFJ4MXBWuuAvF'
                'j8cb4YlmZC1oMItQaTS473efeOTd8woNz5P8r7+hMaiDn9ZBlJ9H7iXO7PgU1VsL'
                '5uVnfB7/7G8phx7ymqPtkZew2DhS4FCQgDHvGru1r8iz3ZN6B2/2dhqzYkBcP32G'
                'o7F6YXCmWcFgCJUPf14Gpd4+WZiJXvp97qBgvpV1Zo94qxkHs7obfQABAAEAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAEAA3BBOO+7vaFqmH3ZATJtHJRZSEyIooYbkaMSWHrnDvYjfsUOEDLcOd3ompao'
                '6FnXapim5+NqDP41LKiTBYI0/4M/yzsDgR6fDcDZpS+ARbSy+UEbZ6UcRLXvjOd7'
                '1tVrp1c0oYVt5tS+1tOiQsfIeRs0IjdeXHeavwcvdpXvoPdby4N4n8MOP+TMg5Ig'
                'eEBjiUnH9ohWX2SbdNY9jVj/rdpXHpVUQmsTGPxGiYPUyKViiwa2/F1QfBPnoYrB'
                'UR621i6lRI+DUBRHqa+z7MKQPJ3VL5Iqyazb71jGAhhI2W4ghzLT0dnZ6kQNkWIc'
                'epnbiEPFnB8uLH2bV31RLBZtb34arUp3SjdEfnj+ICHhSpXREqBoraAZ9GPHpVaF'
                'qrtoiLkkZIPRi5yAb0dJGDMXgjRKS4UxM0smMDJj2dLrT0u5lgKzUvauQEbGml5+'
                'jkoY75vAot7WExBBcBL9gkzBFs+3xMH37HF3oXRGy96W8+3Yj80FLwuIikX9rytj'
                'E1T0DRbl+pwsTtqY55jRXmBG3FNj8wlrLGB6nY3VWxUCpqx9PMjYxXWZjn15aRDI'
                'BMSVI1BX6R7NJjfJwYRRUaxrmgSQrj7G9HdAoNsLo20HWVbO5zVOo+mk8nILJlUM'
                'fTlDJLwMt+kxfYqGYfQhkf8QsIJWzj/SW3ReUZSQa01hy0wuAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'Um9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAFDQTAwMDAwMDAzAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe+jvbLJ5yeLu4SHG'
                '6vRP9jn4jweLS3ftn5VgsDWCgbUOVatyERWhd3A8ejD+OunvHGC8HZdGdrI6aMwE'
                'sZhSW8lo8R3i21Dk2efwceVi2uIJIjPp02P2HdfBn/OkqR6PZVPUcd17hLnxuM5z'
                'NfD1VAVjoeq4OWPgm+kBAR+ZVGNhKHAg6cwNq0h/FA1mJqGDbScRHyBo3kdyFJFR'
                'z2nGG6YO+dlJoPcfVJny05rSjHAFNIKTxDH/vTP2vKYNxxleorzFbSALr20G0JxB'
                '243pxyAVTKSDK2nAjGnNOwc6AGNgL0YtM4BhpepskVzVYjV5w+tkzkTvWG0UuqqI'
                'NAGbPuvu03kAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAA=='
            ),
            'DBI': (
                'AAEAA3BBOO+7vaFqmH3ZATJtHJRZSEyIooYbkaMSWHrnDvYjfsUOEDLcOd3ompao'
                '6FnXapim5+NqDP41LKiTBYI0/4M/yzsDgR6fDcDZpS+ARbSy+UEbZ6UcRLXvjOd7'
                '1tVrp1c0oYVt5tS+1tOiQsfIeRs0IjdeXHeavwcvdpXvoPdby4N4n8MOP+TMg5Ig'
                'eEBjiUnH9ohWX2SbdNY9jVj/rdpXHpVUQmsTGPxGiYPUyKViiwa2/F1QfBPnoYrB'
                'UR621i6lRI+DUBRHqa+z7MKQPJ3VL5Iqyazb71jGAhhI2W4ghzLT0dnZ6kQNkWIc'
                'epnbiEPFnB8uLH2bV31RLBZtb34arUp3SjdEfnj+ICHhSpXREqBoraAZ9GPHpVaF'
                'qrtoiLkkZIPRi5yAb0dJGDMXgjRKS4UxM0smMDJj2dLrT0u5lgKzUvauQEbGml5+'
                'jkoY75vAot7WExBBcBL9gkzBFs+3xMH37HF3oXRGy96W8+3Yj80FLwuIikX9rytj'
                'E1T0DRbl+pwsTtqY55jRXmBG3FNj8wlrLGB6nY3VWxUCpqx9PMjYxXWZjn15aRDI'
                'BMSVI1BX6R7NJjfJwYRRUaxrmgSQrj7G9HdAoNsLo20HWVbO5zVOo+mk8nILJlUM'
                'fTlDJLwMt+kxfYqGYfQhkf8QsIJWzj/SW3ReUZSQa01hy0wuAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'Um9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAFDQTAwMDAwMDAzAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe+jvbLJ5yeLu4SHG'
                '6vRP9jn4jweLS3ftn5VgsDWCgbUOVatyERWhd3A8ejD+OunvHGC8HZdGdrI6aMwE'
                'sZhSW8lo8R3i21Dk2efwceVi2uIJIjPp02P2HdfBn/OkqR6PZVPUcd17hLnxuM5z'
                'NfD1VAVjoeq4OWPgm+kBAR+ZVGNhKHAg6cwNq0h/FA1mJqGDbScRHyBo3kdyFJFR'
                'z2nGG6YO+dlJoPcfVJny05rSjHAFNIKTxDH/vTP2vKYNxxleorzFbSALr20G0JxB'
                '243pxyAVTKSDK2nAjGnNOwc6AGNgL0YtM4BhpepskVzVYjV5w+tkzkTvWG0UuqqI'
                'NAGbPuvu03kAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAABAASWn+gojaa53VLHvWNkKkqa5fBT7MuTYT/aN5kg'
                'h72RmdpeZ5dhjXcJgTP9WwXNgogTni6XXNJggAOHjNrwIPUaDlt2kngIRVYbMcYY'
                'COikfDRiIk2U9zbpoU5WrL9xt/Ebve443bhG1r2PCrTklIxUNOr5vyZSm364NnHT'
                'zmCm16hQ2+aAHsUqe3o+Wie8Z1ujxTN3z8Ny684CBi9Z83ADqiOuNdSIDg5LafmC'
                '+xusgGwvdbopWH8oFf13g5mMNU1SsZ4/rZ++9ETEhXkojbCXgRavyCzlTay57X4b'
                '/VCTjyL4XuzzpPQmrl/rFbcvAi+zbszpMU2tExQpv8lnX1juAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'Um9vdC1DQTAwMDAwMDAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAFYUzAwMDAwMDIwAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANIdPOZ8EGna'
                'BJ1eUxDna5B+GO7ICzN8RyPjOVc/TGZJB9svCDLQPfXqXxYKSvJBANca+sLjrnWv'
                'oSKAEqmiFhZZffcer8tllBRw0bQPXvg6WX4Xn8tbV8LuF9o7w3aYZMtHhWdnIp1n'
                'MoFB/Jqx3xSeDFwVrrgLxY/HG+GJZmQtaDCLUGk0uO93n3jk3fMKDc+T/K+/oTGo'
                'g5/WQZSfR+4lzuz4FNVbC+blZ3we/+xvKYce8pqj7ZGXsNg4UuBQkIAx7xq7ta/I'
                's92Tegdv9nYas2JAXD99hqOxemFwplnBYAiVD39eBqXePlmYiV76fe6gYL6VdWaP'
                'eKsZB7O6G30AAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
                'AAAAAAAAAAAAAAAAAAAAAA=='
            ),
        }
        if ctype not in certlist:
            ctype = 'Tinfoil'
        chain = bytearray(binascii.a2b_base64(certlist[ctype]))
        return chain
